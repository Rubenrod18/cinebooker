"""Initial migration

Revision ID: c00ec4af797d
Revises:
Create Date: 2025-09-04 07:57:06.459199

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'c00ec4af797d'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'auth_user',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('inactive_at', sa.DateTime(), nullable=True),
        sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('date_joined', sa.DateTime(), nullable=True),
        sa.Column('last_login', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_auth_user_email'), 'auth_user', ['email'], unique=True)
    op.create_table(
        'discount',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('inactive_at', sa.DateTime(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('is_percentage', sa.Boolean(), nullable=False),
        sa.Column('amount', sa.Numeric(), nullable=False),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.Column('usage_limit', sa.Integer(), nullable=True),
        sa.Column('times_used', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code'),
    )
    op.create_table(
        'movie',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('duration', sa.Integer(), nullable=False),
        sa.Column('release_date', sa.Date(), nullable=False),
        sa.Column(
            'genre',
            sa.Enum(
                'action',
                'comedy',
                'drama',
                'horror',
                'romance',
                'science_fiction',
                'thriller',
                'animation',
                'documentary',
                'fantasy',
                name='moviegenre',
            ),
            nullable=False,
        ),
        sa.Column('director', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'screen',
        sa.Column('inactive_at', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('capacity', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'customer',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('auth_user_id', sa.Uuid(), nullable=False),
        sa.Column('birthdate', sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ['auth_user_id'],
            ['auth_user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'seat',
        sa.Column('inactive_at', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('screen_id', sa.Integer(), nullable=False),
        sa.Column('number', sa.Integer(), nullable=False),
        sa.Column('row', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['screen_id'],
            ['screen.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('screen_id', 'number', 'row'),
    )
    op.create_table(
        'showtime',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('movie_id', sa.Integer(), nullable=False),
        sa.Column('screen_id', sa.Integer(), nullable=False),
        sa.Column('start_time', sa.DateTime(), nullable=False),
        sa.Column('base_price', sa.Numeric(), nullable=False),
        sa.Column('vat_rate', sa.Numeric(), nullable=False),
        sa.Column('price_with_vat', sa.Numeric(), nullable=False),
        sa.ForeignKeyConstraint(
            ['movie_id'],
            ['movie.id'],
        ),
        sa.ForeignKeyConstraint(
            ['screen_id'],
            ['screen.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'booking',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('customer_id', sa.Integer(), nullable=False),
        sa.Column('showtime_id', sa.Uuid(), nullable=False),
        sa.Column('discount_id', sa.Integer(), nullable=True),
        sa.Column(
            'status',
            sa.Enum('pending_payment', 'confirmed', 'cancelled', 'expired', name='bookingstatus'),
            nullable=False,
        ),
        sa.Column('expired_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ['customer_id'],
            ['customer.id'],
        ),
        sa.ForeignKeyConstraint(
            ['discount_id'],
            ['discount.id'],
        ),
        sa.ForeignKeyConstraint(
            ['showtime_id'],
            ['showtime.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'booking_seat',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('booking_id', sa.Uuid(), nullable=False),
        sa.Column('seat_id', sa.Integer(), nullable=False),
        sa.Column('base_price', sa.Numeric(), nullable=False),
        sa.Column('vat_rate', sa.Numeric(), nullable=False),
        sa.Column('price_with_vat', sa.Numeric(), nullable=False),
        sa.ForeignKeyConstraint(
            ['booking_id'],
            ['booking.id'],
        ),
        sa.ForeignKeyConstraint(
            ['seat_id'],
            ['seat.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'invoice',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('booking_id', sa.Uuid(), nullable=False),
        sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('total_base_price', sa.Numeric(), nullable=False),
        sa.Column('vat_rate', sa.Numeric(), nullable=False),
        sa.Column('total_vat_price', sa.Numeric(), nullable=False),
        sa.Column('total_price', sa.Numeric(), nullable=False),
        sa.Column('status', sa.Enum('issued', 'paid', 'refunded', name='invoicestatus'), nullable=False),
        sa.ForeignKeyConstraint(
            ['booking_id'],
            ['booking.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'payment',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('booking_id', sa.Uuid(), nullable=False),
        sa.Column('provider', sa.Enum('paypal', 'stripe', name='paymentprovider'), nullable=False),
        sa.Column('provider_payment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('provider_metadata', sa.JSON(), nullable=True),
        sa.Column('amount', sa.Numeric(), nullable=False),
        sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            'status', sa.Enum('pending', 'completed', 'failed', 'cancelled', name='paymentstatus'), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ['booking_id'],
            ['booking.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'invoice_item',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('invoice_id', sa.Integer(), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('quantity', sa.Integer(), nullable=False),
        sa.Column('unit_price', sa.Numeric(), nullable=False),
        sa.Column('base_price', sa.Numeric(), nullable=False),
        sa.Column('vat_rate', sa.Numeric(), nullable=False),
        sa.Column('vat_price', sa.Numeric(), nullable=False),
        sa.Column('total_price', sa.Numeric(), nullable=False),
        sa.ForeignKeyConstraint(
            ['invoice_id'],
            ['invoice.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'ticket',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('booking_seat_id', sa.Integer(), nullable=False),
        sa.Column('ticket_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('barcode_value', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('barcode_type', sa.Enum('qr', 'code128', 'ean13', name='ticketbarcodetype'), nullable=False),
        sa.Column('status', sa.Enum('issued', 'redeemed', name='ticketstatus'), nullable=False),
        sa.Column('issued_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('redeemed_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ['booking_seat_id'],
            ['booking_seat.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ticket')
    op.drop_table('invoice_item')
    op.drop_table('payment')
    op.drop_table('invoice')
    op.drop_table('booking_seat')
    op.drop_table('booking')
    op.drop_table('showtime')
    op.drop_table('seat')
    op.drop_table('customer')
    op.drop_table('screen')
    op.drop_table('movie')
    op.drop_table('discount')
    op.drop_index(op.f('ix_auth_user_email'), table_name='auth_user')
    op.drop_table('auth_user')
    # ### end Alembic commands ###
